{"version":3,"sources":["Game.js"],"names":[],"mappings":"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","file":"Game-compiled.js","sourcesContent":["var gridSize = 6;\nvar enemies = [];\nvar fieldManager;\n\nclass Game {\n    constructor(){\n        game = this;\n        canvas = document.getElementById('game');\n        ctx = canvas.getContext('2d');\n\n        this.player = new Player(0, canvas.clientHeight - gridSize);\n        fieldManager = new FieldManager();\n        enemies.push(new Enemy(50, 50));\n\n        frame(); // start the first frame\n    }\n\n    render(ctx, dt){\n        //console.log('game render dt: ', dt);\n        ctx.clearRect(0, 0, canvas.clientWidth, canvas.clientHeight);\n        fieldManager.render(ctx);\n        this.player.render(ctx);\n\n        for(var i = 0; i < enemies.length; i++){\n            enemies[i].render(ctx);\n        }\n    }\n\n    update(dt){\n        //console.log('game update: ', dt);\n        this.player.update(dt);\n\n        for(var i = 0; i < enemies.length; i++){\n            enemies[i].update(dt);\n        }\n    }\n}\n\nclass Player{\n    constructor(posX, posY){\n        this.x = posX;\n        this.y = posY;\n\n        this.size = 5;\n        this.speed = 2;\n        this.direction = {\n            x: 0,\n            y: 0\n        };\n        this.color = '#333';\n        this.color2 = '#f00';\n        this.isDrawing = false;\n        this.isMoving = false;\n\n        this.currentRect = [];\n\n        document.addEventListener('keydown', (ev) => { return this.keyDown(ev.keyCode);  }, false);\n    }\n\n    addNewPosition(){\n        this.currentRect.push({ x: this.x, y: this.y });\n        //console.log('currentRect: ', this.currentRect);\n    }\n\n    resetCurrentPosition(){\n        this.currentRect = [];\n    }\n\n    stop(){\n        this.direction.x = 0;\n        this.direction.y = 0;\n\n        if(this.isDrawing){\n            this.addNewPosition();\n            fieldManager.addNewPoly(this.currentRect);\n            this.resetCurrentPosition();\n\n            if(this.x < this.size + 1){\n                this.x = 0;\n            } else if(this.x > canvas.clientWidth - this.size - gridSize - 1){\n                this.x = canvas.clientWidth - this.size;\n            } else if(this.y < this.size + 1){\n                this.y = 0\n            } else if(this.y > canvas.clientHeight - this.size - gridSize - 1){\n                this.y = canvas.clientHeight - this.size;\n            }\n        }\n\n        this.isDrawing = false;\n        this.isMoving = false;\n    }\n\n    move(dir){\n        this.isMoving = true;\n        this.direction = dir;\n\n        if(this.isDrawing){\n            this.addNewPosition();\n        }\n    }\n\n    keyDown(keyCode) {\n        if(keyCode == 37){\n            this.move({ x: -1, y: 0 })\n        }else if(keyCode == 38){\n            this.move({ x: 0, y: -1 })\n        } else if(keyCode == 39){\n            this.move({ x: 1, y: 0 })\n        } else if(keyCode == 40){\n            this.move({ x: 0, y: 1 })\n        } else if(keyCode == 32){\n            if(!this.isDrawing){\n                this.stop();\n            }\n        }\n    }\n\n    render(ctx){\n        if(this.isDrawing){\n            ctx.fillStyle = this.color2;\n        } else {\n            ctx.fillStyle = this.color;\n        }\n        ctx.fillRect(this.x, this.y, this.size, this.size);\n\n        for(var i = 0; i < this.currentRect.length; i++){\n            ctx.fillRect(this.currentRect[i].x, this.currentRect[i].y, gridSize, gridSize);\n        }\n    }\n\n    update(dt){\n        this.x += this.speed * this.direction.x;\n        this.y += this.speed * this.direction.y;\n\n        if(this.x > canvas.clientWidth - this.size/2){\n            this.x = -this.size/2;\n        } else if(this.x < -this.size/2){\n            this.x = canvas.clientWidth - this.size/2;\n        }\n\n        if(this.y > canvas.clientHeight - this.size/2){\n            this.y = -this.size/2;\n        } else if(this.y < -this.size/2){\n            this.y = canvas.clientHeight - this.size/2;\n        }\n\n        var isOvelap = false;\n        for(let i = 0; i < fieldManager.rectangles.length; i++){\n            let x1 = fieldManager.rectangles[i][0];\n            let y1 = fieldManager.rectangles[i][1];\n            let x2 = x1 + fieldManager.rectangles[i][2];\n            let y2 = y1 + fieldManager.rectangles[i][3];\n\n            if(x1 - gridSize < this.x && x2 > this.x && y1 - gridSize < this.y && y2 > this.y){\n                isOvelap = true;\n            }\n        }\n\n        if(isOvelap){\n            //console.log('player overlap!');\n\n            if(this.isDrawing){\n                this.stop();\n            }\n\n        } else {\n            if(this.isMoving){\n                this.isDrawing = true;\n                if(this.currentRect.length == 0){\n                    this.addNewPosition();\n                }\n                //console.log('isDrawing!');\n            }\n        }\n    }\n\n}\n\n\nclass FieldManager{\n    constructor(){\n        this.rectangles = [];\n        this.rectangles.push(\n            [0, 0, canvas.clientWidth, gridSize],\n            [canvas.clientWidth - gridSize, 0, gridSize, canvas.clientHeight],\n            [0, canvas.clientHeight - gridSize, canvas.clientWidth, gridSize],\n            [0, 0, gridSize, canvas.clientHeight]\n        );\n        this.color = '#888';\n\n        this.polyArray = [];\n    }\n\n    addNewPoly(array){\n        for(var i = 0; i < array.length; i++){\n            var moduloX = array[i].x % gridSize;\n            var moduloY = array[i].y % gridSize;\n            if(moduloX){\n                array[i].x -= moduloX;\n            }\n\n            if(moduloY){\n                array[i].y -= moduloY;\n            }\n\n            if(array[i].x == gridSize){\n                array[i].x = 0;\n            } else if(array[i].x == canvas.clientWidth - gridSize*2 || array[i].x == canvas.clientWidth - gridSize*3){\n                array[i].x = canvas.clientWidth;\n            }\n\n\n            if(array[i].y == gridSize){\n                array[i].y = 0;\n            } else if(array[i].y == canvas.clientHeight - gridSize*2 || array[i].y == canvas.clientHeight - gridSize*3){\n                array[i].y = canvas.clientHeight;\n            }\n\n        }\n\n        if((array[0].x == 0 && array[array.length - 1].y == 0) || (array[0].y == 0 && array[array.length - 1].x == 0)){\n            array.push({ x: 0, y: 0 });\n        } else if((array[0].x == canvas.clientWidth && array[array.length - 1].y == 0) || (array[0].y == 0 && array[array.length - 1].x == canvas.clientWidth)){\n            array.push({ x: canvas.clientWidth, y: 0 });\n        } else if((array[0].x == canvas.clientWidth && array[array.length - 1].y == canvas.clientHeight) || (array[0].y == canvas.clientHeight && array[array.length - 1].x == canvas.clientWidth)){\n            array.push({ x: canvas.clientWidth, y: canvas.clientHeight });\n        } if((array[0].x == 0 && array[array.length - 1].y == canvas.clientHeight) || (array[0].y == canvas.clientHeight && array[array.length - 1].x == 0)){\n            array.push({ x: 0, y: canvas.clientHeight });\n        }\n\n        this.polyArray.push(array);\n\n        console.log('addNewPoly: ' , array);\n\n    }\n\n    render(ctx){\n        ctx.fillStyle = '#0f0';\n\n        for(var i = 0; i < this.polyArray.length; i++){\n            ctx.beginPath();\n            for(var j = 0; j < this.polyArray[i].length; j++){\n                if(j == 0){\n                    ctx.moveTo(this.polyArray[i][j].x, this.polyArray[i][j].y);\n                } else {\n                    ctx.lineTo(this.polyArray[i][j].x, this.polyArray[i][j].y);\n                }\n            }\n            ctx.closePath();\n            ctx.fill();\n        }\n\n        ctx.fillStyle = this.color;\n        for(let i = 0; i < this.rectangles.length; i++){\n            let x = this.rectangles[i][0];\n            let y = this.rectangles[i][1];\n            let width = this.rectangles[i][2];\n            let height = this.rectangles[i][3];\n\n            ctx.fillRect(x, y, width, height);\n        }\n\n    }\n\n    getColor(x, y){\n        let colorData = ctx.getImageData(x, y, 1, 1);\n        return colorData.data;\n    }\n\n    checkCollision(object){\n        let nextColorData = this.getColor(object.x + object.size * object.dirVector.x, object.y + object.size * object.dirVector.y);\n        //console.log('colorData: ', colorData);\n        if(nextColorData[1] == 255 || nextColorData[1] == 136){\n            let collisionDirection = [];\n            let nextHorizontalColor = this.getColor(object.x + object.size * object.dirVector.x, object.y);\n            let nextVerticalColor = this.getColor(object.x,  object.y + object.size * object.dirVector.y);\n\n            if( object.dirVector.x > 0 && nextHorizontalColor[1] == 136 || nextHorizontalColor[1] == 255 ){\n                collisionDirection.push('RIGHT');\n            } else if( nextHorizontalColor[1] == 136 || nextHorizontalColor[1] == 255){\n                collisionDirection.push('LEFT');\n            }\n\n            if( object.dirVector.y > 0 && nextVerticalColor[1] == 136 || nextVerticalColor[1] == 255 ){\n                collisionDirection.push('BOTTOM');\n            } else if( nextVerticalColor[1] == 136 || nextVerticalColor[1] == 255){\n                collisionDirection.push('TOP');\n            }\n\n            console.log('collisionDirection: ', collisionDirection);\n\n            return collisionDirection;\n        }\n\n        return false;\n    }\n}\n\nclass Enemy{\n    constructor(x, y){\n        this.x = x;\n        this.y = y;\n        this.size = 3;\n        this.dirVector = {\n            x: 1,\n            y: -1\n        }\n    }\n\n    render(ctx){\n        ctx.beginPath();\n        ctx.arc(this.x, this.y, this.size, 0, 2 * Math.PI);\n        ctx.fillStyle = 'blue';\n        ctx.fill();\n    }\n\n    update(dt){\n        this.x += this.dirVector.x;\n        this.y += this.dirVector.y;\n\n        let collisionArray = fieldManager.checkCollision(this);\n        if( collisionArray ){\n            for(let i = 0; i < collisionArray.length; i++){\n                if(collisionArray[i] == 'LEFT' || collisionArray[i] == 'RIGHT'){\n                    this.dirVector.x *= -1;\n                }\n\n                if(collisionArray[i] == 'TOP' || collisionArray[i] == 'BOTTOM'){\n                    this.dirVector.y *= -1;\n                }\n            }\n        }\n    }\n}"]}