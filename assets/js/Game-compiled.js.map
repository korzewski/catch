{"version":3,"sources":["Game.js"],"names":[],"mappings":"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","file":"Game-compiled.js","sourcesContent":["var gridSize = 6;\n\nclass Game {\n    constructor(){\n        game = this;\n        canvas = document.getElementById('game');\n        ctx = canvas.getContext('2d');\n\n        this.player = new Player(canvas.clientWidth / 2, canvas.clientHeight / 2);\n        this.fieldManager = new FieldManager();\n\n        frame(); // start the first frame\n    }\n\n    render(ctx, dt){\n        //console.log('game render dt: ', dt);\n        ctx.clearRect(0, 0, canvas.clientWidth, canvas.clientHeight);\n        this.fieldManager.render(ctx);\n        this.player.render(ctx);\n    }\n\n    update(dt){\n        //console.log('game update: ', dt);\n        this.player.update(dt, this.fieldManager);\n    }\n}\n\nclass Player{\n    constructor(posX, posY){\n        this.x = posX;\n        this.y = posY;\n\n        this.size = 5;\n        this.speed = 2;\n        this.direction = {\n            x: 0,\n            y: 0\n        };\n        this.color = '#333';\n        this.color2 = '#f00';\n        this.isDrawing = false;\n        this.isMoving = false;\n\n        document.addEventListener('keydown', (ev) => { return this.keyDown(ev.keyCode);  }, false);\n    }\n\n    stop(){\n        this.direction.x = 0;\n        this.direction.y = 0;\n\n        if(this.isDrawing){\n            if(this.x < this.size + 1){\n                this.x = 0;\n            } else if(this.x > canvas.clientWidth - this.size - gridSize - 1){\n                this.x = canvas.clientWidth - this.size;\n            } else if(this.y < this.size + 1){\n                this.y = 0\n            } else if(this.y > canvas.clientHeight - this.size - gridSize - 1){\n                this.y = canvas.clientHeight - this.size;\n            }\n        }\n\n        this.isDrawing = false;\n        this.isMoving = false;\n    }\n\n    move(dir){\n        this.isMoving = true;\n        this.direction = dir;\n    }\n\n    keyDown(keyCode) {\n        if(keyCode == 37){\n            this.move({ x: -1, y: 0 })\n        }else if(keyCode == 38){\n            this.move({ x: 0, y: -1 })\n        } else if(keyCode == 39){\n            this.move({ x: 1, y: 0 })\n        } else if(keyCode == 40){\n            this.move({ x: 0, y: 1 })\n        } else if(keyCode == 32){\n            if(!this.isDrawing){\n                this.stop();\n            }\n        }\n    }\n\n    render(ctx){\n        if(this.isDrawing){\n            ctx.fillStyle = this.color2;\n        } else {\n            ctx.fillStyle = this.color;\n        }\n        ctx.fillRect(this.x, this.y, this.size, this.size);\n    }\n\n    update(dt, fieldManager){\n        this.x += this.speed * this.direction.x;\n        this.y += this.speed * this.direction.y;\n\n        if(this.x > canvas.clientWidth - this.size/2){\n            this.x = -this.size/2;\n        } else if(this.x < -this.size/2){\n            this.x = canvas.clientWidth - this.size/2;\n        }\n\n        if(this.y > canvas.clientHeight - this.size/2){\n            this.y = -this.size/2;\n        } else if(this.y < -this.size/2){\n            this.y = canvas.clientHeight - this.size/2;\n        }\n\n        var isOvelap = false;\n        for(let i = 0; i < fieldManager.rectangles.length; i++){\n            let x1 = fieldManager.rectangles[i][0];\n            let y1 = fieldManager.rectangles[i][1];\n            let x2 = x1 + fieldManager.rectangles[i][2];\n            let y2 = y1 + fieldManager.rectangles[i][3];\n\n            if(x1 - gridSize < this.x && x2 > this.x && y1 - gridSize < this.y && y2 > this.y){\n                isOvelap = true;\n            }\n        }\n\n        if(isOvelap){\n            console.log('player overlap!');\n\n            if(this.isDrawing){\n                this.stop();\n            }\n\n        } else {\n            if(this.isMoving){\n                this.isDrawing = true;\n                console.log('isDrawing!');\n            }\n        }\n    }\n\n}\n\n\nclass FieldManager{\n    constructor(){\n        this.rectangles = [];\n        this.rectangles.push(\n            [0, 0, canvas.clientWidth, gridSize],\n            [canvas.clientWidth - gridSize, 0, gridSize, canvas.clientHeight],\n            [0, canvas.clientHeight - gridSize, canvas.clientWidth, gridSize],\n            [0, 0, gridSize, canvas.clientHeight]\n        );\n        this.color = '#888';\n    }\n\n    render(ctx){\n        ctx.fillStyle = this.color;\n\n        for(let i = 0; i < this.rectangles.length; i++){\n            let x = this.rectangles[i][0];\n            let y = this.rectangles[i][1];\n            let width = this.rectangles[i][2];\n            let height = this.rectangles[i][3];\n\n            ctx.fillRect(x, y, width, height);\n        }\n    }\n}"]}